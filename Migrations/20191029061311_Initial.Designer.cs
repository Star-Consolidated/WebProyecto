// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebProyecto.Data;

namespace WebProyecto.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20191029061311_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("WebProyecto.Models.Caracteristica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre");

                    b.HasKey("ID");

                    b.ToTable("caracteristicas");
                });

            modelBuilder.Entity("WebProyecto.Models.Carrito", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Cantidad");

                    b.Property<int>("ProductoID");

                    b.Property<int>("SubTotal");

                    b.Property<int>("UsuarioID");

                    b.HasKey("ID");

                    b.HasIndex("ProductoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("carritos");
                });

            modelBuilder.Entity("WebProyecto.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre");

                    b.HasKey("ID");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("WebProyecto.Models.Detalle_Pedido", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CarritoID");

                    b.Property<int>("CarritoProductoID");

                    b.Property<int>("CarritoUsuarioID");

                    b.Property<int>("PedidoID");

                    b.HasKey("ID");

                    b.HasIndex("CarritoID");

                    b.HasIndex("PedidoID");

                    b.ToTable("detalle_pedidos");
                });

            modelBuilder.Entity("WebProyecto.Models.Opcion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CaracteristicaID");

                    b.Property<int>("Nombre");

                    b.HasKey("ID");

                    b.HasIndex("CaracteristicaID");

                    b.ToTable("opciones");
                });

            modelBuilder.Entity("WebProyecto.Models.Pedido", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Estado");

                    b.Property<DateTime>("Fecha_Entrega");

                    b.Property<DateTime>("Fecha_Pedido");

                    b.Property<decimal>("Precio_Envio");

                    b.Property<decimal>("SubTotal");

                    b.HasKey("ID");

                    b.ToTable("pedidos");
                });

            modelBuilder.Entity("WebProyecto.Models.Producto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CaracteristicaID");

                    b.Property<int>("Caracteristica_ID");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.Property<float>("Peso");

                    b.Property<int?>("TiendaID");

                    b.Property<int>("Tienda_ID");

                    b.HasKey("ID");

                    b.HasIndex("CaracteristicaID");

                    b.HasIndex("TiendaID");

                    b.ToTable("productos");
                });

            modelBuilder.Entity("WebProyecto.Models.Producto_Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoriaID");

                    b.Property<int>("ProductoID");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("ProductoID");

                    b.ToTable("producto_categorias");
                });

            modelBuilder.Entity("WebProyecto.Models.Tienda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contraseña");

                    b.Property<string>("Correo");

                    b.Property<string>("Nombre");

                    b.Property<int>("Telefono");

                    b.HasKey("ID");

                    b.ToTable("tiendas");
                });

            modelBuilder.Entity("WebProyecto.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contraseña");

                    b.Property<string>("Correo");

                    b.Property<string>("Direcction");

                    b.Property<string>("Nombre");

                    b.Property<int>("Telefono");

                    b.HasKey("ID");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("WebProyecto.Models.Carrito", b =>
                {
                    b.HasOne("WebProyecto.Models.Producto", "Producto")
                        .WithMany("Carritos")
                        .HasForeignKey("ProductoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebProyecto.Models.Usuario", "Usuario")
                        .WithMany("Carritos")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebProyecto.Models.Detalle_Pedido", b =>
                {
                    b.HasOne("WebProyecto.Models.Carrito", "Carrito")
                        .WithMany("Detalle_Pedidos")
                        .HasForeignKey("CarritoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebProyecto.Models.Pedido", "Pedido")
                        .WithMany("Detalle_Pedidos")
                        .HasForeignKey("PedidoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebProyecto.Models.Opcion", b =>
                {
                    b.HasOne("WebProyecto.Models.Caracteristica", "Caracteristica")
                        .WithMany("Opciones")
                        .HasForeignKey("CaracteristicaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebProyecto.Models.Producto", b =>
                {
                    b.HasOne("WebProyecto.Models.Caracteristica", "Caracteristica")
                        .WithMany("Productos")
                        .HasForeignKey("CaracteristicaID");

                    b.HasOne("WebProyecto.Models.Tienda", "Tienda")
                        .WithMany("Productos")
                        .HasForeignKey("TiendaID");
                });

            modelBuilder.Entity("WebProyecto.Models.Producto_Categoria", b =>
                {
                    b.HasOne("WebProyecto.Models.Categoria", "Categoria")
                        .WithMany("Producto_Categorias")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebProyecto.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
